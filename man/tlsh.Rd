% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dsl.R
\name{tlsh}
\alias{tlsh}
\title{Create a new \code{tlsh} object}
\usage{
tlsh(content = NULL)
}
\arguments{
\item{content}{Can be a URL, path, lenth 1+ character vector or raw vector.
See \code{Details} for more info}
}
\value{
\code{tlsh} object
}
\description{
An alternative to the simple interface when you need more control over
the hashing (e.g. reading in a large file chunk-by-chunk). The mini-DSL
is created with the concept of piping (i.e. use of \code{\%>\%}) in mind.
}
\details{
At a minimum, a new, empty \code{tlsh} object will be created and returned. By
specifying \code{content}, the caller can pre-populate the hash with content.
Tests will performed on \code{content} and the behaviour will be different depending on
what is passed in:
\itemize{
\item A raw vector will be added without any further processing
\item A single element character vector will be added without any further processing
\item A length >1 character vector will have each vector element added via the "update"
mechanism.
}
}
\examples{
doc1 <- as.character(xml2::read_html(system.file("extdat", "index.html", package="tlsh")))

tlsh() \%>\%
  tlsh_update(doc1) \%>\%
  tlsh_finalize() -> x

tlsh_hash(x)

x
}
